{
	"id": "468c8b465fb1c2d6fc33b14318f7ac2f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"Documents/Web3/Casino/002 Roulette.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.15;\n\n/*  This contract contains a function for each odds bracket of roulette bets.\n    This results in the bets of similar odds to call the same function, meaning\n    that the front end will need to create an illusion of choice for each bet\n    while in reality, they will just be choosing an odds bracket. Although the\n    game will be mathematically equivalent to a game with true choice, players\n    may feel misled unless provided a proficient disclaimer on the games interface.\n*/\n\ncontract Roulette {\n\n    address payable public owner;\n    address payable public player;\n\n    // constructor to set owner\n    constructor() {\n        owner = payable(msg.sender);\n    }\n\n    // modifier to restrict to owner\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    // modifier setBet() {\n    //     uint bet = msg.value;\n    //     _;\n    // }\n\n    // pseudorandom number generator (will use chainlink when deployed to testnet)\n    function getRandomNumber() private view returns (uint) {\n        return uint(keccak256(abi.encodePacked(address(this).balance, block.timestamp, block.difficulty)));\n    }\n\n    /*  odds functions:\n        Note that actual roulette odds do not match up with\n        the payouts due to the possibility of rolling 0 or 00.\n        (Zero is neither odd nor even in roulette)\n    */\n\n    function A_oneToOne(uint bet) payable public {\n        require(msg.value == bet * 1 ether);\n        uint determinant = getRandomNumber() % 38;\n        if (determinant < 18) {\n            payable(msg.sender).transfer(bet * 2 ether);\n        }\n        else {}\n    }\n\n    function B_twoToOne(uint bet) payable public {\n        require(msg.value == bet * 1 ether);\n        uint determinant = getRandomNumber() % 38;\n        if (determinant < 12) {\n            payable(msg.sender).transfer(bet * 3 ether);\n        }\n        else {}\n    }\n\n    function C_fiveToOne(uint bet) payable public {\n        require(msg.value == bet * 1 ether);\n        uint determinant = getRandomNumber() % 38;\n        if (determinant < 6) {\n            payable(msg.sender).transfer(bet * 6 ether);\n        }\n        else {}\n    }\n\n    function D_eightToOne(uint bet) payable public {\n        require(msg.value == bet * 1 ether);\n        uint determinant = getRandomNumber() % 38;\n        if (determinant < 4) {\n            payable(msg.sender).transfer(bet * 9 ether);\n        }\n        else {}\n    }\n\n    function E_elevenToOne(uint bet) payable public {\n        require(msg.value == bet * 1 ether);\n        uint determinant = getRandomNumber() % 38;\n        if (determinant < 3) {\n            payable(msg.sender).transfer(bet * 12 ether);\n        }\n        else {}\n    }\n\n    function F_seventeenToOne(uint bet) payable public {\n        require(msg.value == bet * 1 ether);\n        uint determinant = getRandomNumber() % 38;\n        if (determinant < 2) {\n            payable(msg.sender).transfer(bet * 18 ether);\n        }\n        else {}\n    }\n\n    function G_thirtyfiveToOne(uint bet) payable public {\n        require(msg.value == bet * 1 ether);\n        uint determinant = getRandomNumber() % 38;\n        if (determinant < 1) {\n            payable(msg.sender).transfer(bet * 36 ether);\n        }\n        else {}\n    }\n\n    // owner deposit and withdraw functions\n    function H_deposit() payable public onlyOwner() {}\n\n    function I_withdraw(uint amount) public onlyOwner() {\n        owner.transfer(amount * 1 ether);\n    }\n\n    // get balance function (restricted to owner)\n    function J_getBalance() public view onlyOwner() returns (uint) {\n        return address(this).balance;\n    }\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Documents/Web3/Casino/002 Roulette.sol": {
				"Roulette": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bet",
									"type": "uint256"
								}
							],
							"name": "A_oneToOne",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bet",
									"type": "uint256"
								}
							],
							"name": "B_twoToOne",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bet",
									"type": "uint256"
								}
							],
							"name": "C_fiveToOne",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bet",
									"type": "uint256"
								}
							],
							"name": "D_eightToOne",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bet",
									"type": "uint256"
								}
							],
							"name": "E_elevenToOne",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bet",
									"type": "uint256"
								}
							],
							"name": "F_seventeenToOne",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bet",
									"type": "uint256"
								}
							],
							"name": "G_thirtyfiveToOne",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "H_deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "I_withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "J_getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "player",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/Web3/Casino/002 Roulette.sol\":547:3679  contract Roulette {... */\n  mstore(0x40, 0x80)\n    /* \"Documents/Web3/Casino/002 Roulette.sol\":674:732  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Documents/Web3/Casino/002 Roulette.sol\":714:724  msg.sender */\n  caller\n    /* \"Documents/Web3/Casino/002 Roulette.sol\":698:703  owner */\n  0x00\n  dup1\n    /* \"Documents/Web3/Casino/002 Roulette.sol\":698:725  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Documents/Web3/Casino/002 Roulette.sol\":547:3679  contract Roulette {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":547:3679  contract Roulette {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8fb17973\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbed2e0c3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe8d18212\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf855aa9e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xff65d090\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x07d0394c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x14fbb92b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1640e34e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x374ccd33\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x48db5f89\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4eca8772\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2756:3025  function F_seventeenToOne(uint bet) payable public {... */\n    tag_2:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1945:2208  function C_fiveToOne(uint bet) payable public {... */\n    tag_3:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1407:1670  function A_oneToOne(uint bet) payable public {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3564:3672  function J_getBalance() public view onlyOwner() returns (uint) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":606:635  address payable public player */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1676:1939  function B_twoToOne(uint bet) payable public {... */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":572:600  address payable public owner */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2214:2478  function D_eightToOne(uint bet) payable public {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3031:3301  function G_thirtyfiveToOne(uint bet) payable public {... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3351:3401  function H_deposit() payable public onlyOwner() {} */\n    tag_11:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3407:3508  function I_withdraw(uint amount) public onlyOwner() {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2484:2750  function E_elevenToOne(uint bet) payable public {... */\n    tag_13:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2756:3025  function F_seventeenToOne(uint bet) payable public {... */\n    tag_18:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2844:2851  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2838:2841  bet */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2838:2851  bet * 1 ether */\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2825:2834  msg.value */\n      callvalue\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2825:2851  msg.value == bet * 1 ether */\n      eq\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2817:2852  require(msg.value == bet * 1 ether) */\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2862:2878  uint determinant */\n      0x00\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2901:2903  38 */\n      0x26\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2881:2898  getRandomNumber() */\n      tag_61\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2881:2896  getRandomNumber */\n      tag_62\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2881:2898  getRandomNumber() */\n      jump\t// in\n    tag_61:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2881:2903  getRandomNumber() % 38 */\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2862:2903  uint determinant = getRandomNumber() % 38 */\n      swap1\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2931:2932  2 */\n      0x02\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2917:2928  determinant */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2917:2932  determinant < 2 */\n      lt\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2913:3019  if (determinant < 2) {... */\n      iszero\n      tag_65\n      jumpi\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2956:2966  msg.sender */\n      caller\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2948:2976  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2948:2992  payable(msg.sender).transfer(bet * 18 ether) */\n      0x08fc\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2983:2991  18 ether */\n      0xf9ccd8a1c5080000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2977:2980  bet */\n      dup5\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2977:2991  bet * 18 ether */\n      tag_66\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_66:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2948:2992  payable(msg.sender).transfer(bet * 18 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2913:3019  if (determinant < 2) {... */\n      jump(tag_69)\n    tag_65:\n    tag_69:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2807:3025  {... */\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2756:3025  function F_seventeenToOne(uint bet) payable public {... */\n      pop\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1945:2208  function C_fiveToOne(uint bet) payable public {... */\n    tag_21:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2028:2035  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2022:2025  bet */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2022:2035  bet * 1 ether */\n      tag_71\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_71:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2009:2018  msg.value */\n      callvalue\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2009:2035  msg.value == bet * 1 ether */\n      eq\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2001:2036  require(msg.value == bet * 1 ether) */\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2046:2062  uint determinant */\n      0x00\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2085:2087  38 */\n      0x26\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2065:2082  getRandomNumber() */\n      tag_73\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2065:2080  getRandomNumber */\n      tag_62\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2065:2082  getRandomNumber() */\n      jump\t// in\n    tag_73:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2065:2087  getRandomNumber() % 38 */\n      tag_74\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_74:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2046:2087  uint determinant = getRandomNumber() % 38 */\n      swap1\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2115:2116  6 */\n      0x06\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2101:2112  determinant */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2101:2116  determinant < 6 */\n      lt\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2097:2202  if (determinant < 6) {... */\n      iszero\n      tag_75\n      jumpi\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2140:2150  msg.sender */\n      caller\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2132:2160  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2132:2175  payable(msg.sender).transfer(bet * 6 ether) */\n      0x08fc\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2167:2174  6 ether */\n      0x53444835ec580000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2161:2164  bet */\n      dup5\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2161:2174  bet * 6 ether */\n      tag_76\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_76:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2132:2175  payable(msg.sender).transfer(bet * 6 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2097:2202  if (determinant < 6) {... */\n      jump(tag_79)\n    tag_75:\n    tag_79:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1991:2208  {... */\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1945:2208  function C_fiveToOne(uint bet) payable public {... */\n      pop\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1407:1670  function A_oneToOne(uint bet) payable public {... */\n    tag_24:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1489:1496  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1483:1486  bet */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1483:1496  bet * 1 ether */\n      tag_81\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_81:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1470:1479  msg.value */\n      callvalue\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1470:1496  msg.value == bet * 1 ether */\n      eq\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1462:1497  require(msg.value == bet * 1 ether) */\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1507:1523  uint determinant */\n      0x00\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1546:1548  38 */\n      0x26\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1526:1543  getRandomNumber() */\n      tag_83\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1526:1541  getRandomNumber */\n      tag_62\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1526:1543  getRandomNumber() */\n      jump\t// in\n    tag_83:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1526:1548  getRandomNumber() % 38 */\n      tag_84\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_84:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1507:1548  uint determinant = getRandomNumber() % 38 */\n      swap1\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1576:1578  18 */\n      0x12\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1562:1573  determinant */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1562:1578  determinant < 18 */\n      lt\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1558:1664  if (determinant < 18) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1602:1612  msg.sender */\n      caller\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1594:1622  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1594:1637  payable(msg.sender).transfer(bet * 2 ether) */\n      0x08fc\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1629:1636  2 ether */\n      0x1bc16d674ec80000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1623:1626  bet */\n      dup5\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1623:1636  bet * 2 ether */\n      tag_86\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_86:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1594:1637  payable(msg.sender).transfer(bet * 2 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1558:1664  if (determinant < 18) {... */\n      jump(tag_89)\n    tag_85:\n    tag_89:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1452:1670  {... */\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1407:1670  function A_oneToOne(uint bet) payable public {... */\n      pop\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3564:3672  function J_getBalance() public view onlyOwner() returns (uint) {... */\n    tag_27:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3621:3625  uint */\n      0x00\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":828:833  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":814:833  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":814:824  msg.sender */\n      caller\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":814:833  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":806:834  require(msg.sender == owner) */\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3644:3665  address(this).balance */\n      selfbalance\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3637:3665  return address(this).balance */\n      swap1\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3564:3672  function J_getBalance() public view onlyOwner() returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":606:635  address payable public player */\n    tag_32:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1676:1939  function B_twoToOne(uint bet) payable public {... */\n    tag_37:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1758:1765  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1752:1755  bet */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1752:1765  bet * 1 ether */\n      tag_94\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_94:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1739:1748  msg.value */\n      callvalue\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1739:1765  msg.value == bet * 1 ether */\n      eq\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1731:1766  require(msg.value == bet * 1 ether) */\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1776:1792  uint determinant */\n      0x00\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1815:1817  38 */\n      0x26\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1795:1812  getRandomNumber() */\n      tag_96\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1795:1810  getRandomNumber */\n      tag_62\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1795:1812  getRandomNumber() */\n      jump\t// in\n    tag_96:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1795:1817  getRandomNumber() % 38 */\n      tag_97\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_97:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1776:1817  uint determinant = getRandomNumber() % 38 */\n      swap1\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1845:1847  12 */\n      0x0c\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1831:1842  determinant */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1831:1847  determinant < 12 */\n      lt\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1827:1933  if (determinant < 12) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1871:1881  msg.sender */\n      caller\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1863:1891  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1863:1906  payable(msg.sender).transfer(bet * 3 ether) */\n      0x08fc\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1898:1905  3 ether */\n      0x29a2241af62c0000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1892:1895  bet */\n      dup5\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1892:1905  bet * 3 ether */\n      tag_99\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_99:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1863:1906  payable(msg.sender).transfer(bet * 3 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1827:1933  if (determinant < 12) {... */\n      jump(tag_102)\n    tag_98:\n    tag_102:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1721:1939  {... */\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1676:1939  function B_twoToOne(uint bet) payable public {... */\n      pop\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":572:600  address payable public owner */\n    tag_40:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2214:2478  function D_eightToOne(uint bet) payable public {... */\n    tag_44:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2298:2305  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2292:2295  bet */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2292:2305  bet * 1 ether */\n      tag_104\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_104:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2279:2288  msg.value */\n      callvalue\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2279:2305  msg.value == bet * 1 ether */\n      eq\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2271:2306  require(msg.value == bet * 1 ether) */\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2316:2332  uint determinant */\n      0x00\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2355:2357  38 */\n      0x26\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2335:2352  getRandomNumber() */\n      tag_106\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2335:2350  getRandomNumber */\n      tag_62\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2335:2352  getRandomNumber() */\n      jump\t// in\n    tag_106:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2335:2357  getRandomNumber() % 38 */\n      tag_107\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_107:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2316:2357  uint determinant = getRandomNumber() % 38 */\n      swap1\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2385:2386  4 */\n      0x04\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2371:2382  determinant */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2371:2386  determinant < 4 */\n      lt\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2367:2472  if (determinant < 4) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2410:2420  msg.sender */\n      caller\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2402:2430  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2402:2445  payable(msg.sender).transfer(bet * 9 ether) */\n      0x08fc\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2437:2444  9 ether */\n      0x7ce66c50e2840000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2431:2434  bet */\n      dup5\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2431:2444  bet * 9 ether */\n      tag_109\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_109:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2402:2445  payable(msg.sender).transfer(bet * 9 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2367:2472  if (determinant < 4) {... */\n      jump(tag_112)\n    tag_108:\n    tag_112:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2261:2478  {... */\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2214:2478  function D_eightToOne(uint bet) payable public {... */\n      pop\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3031:3301  function G_thirtyfiveToOne(uint bet) payable public {... */\n    tag_47:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3120:3127  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3114:3117  bet */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3114:3127  bet * 1 ether */\n      tag_114\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_114:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3101:3110  msg.value */\n      callvalue\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3101:3127  msg.value == bet * 1 ether */\n      eq\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3093:3128  require(msg.value == bet * 1 ether) */\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3138:3154  uint determinant */\n      0x00\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3177:3179  38 */\n      0x26\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3157:3174  getRandomNumber() */\n      tag_116\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3157:3172  getRandomNumber */\n      tag_62\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3157:3174  getRandomNumber() */\n      jump\t// in\n    tag_116:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3157:3179  getRandomNumber() % 38 */\n      tag_117\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_117:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3138:3179  uint determinant = getRandomNumber() % 38 */\n      swap1\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3207:3208  1 */\n      0x01\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3193:3204  determinant */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3193:3208  determinant < 1 */\n      lt\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3189:3295  if (determinant < 1) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3232:3242  msg.sender */\n      caller\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3224:3252  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3224:3268  payable(msg.sender).transfer(bet * 36 ether) */\n      0x08fc\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3259:3267  36 ether */\n      0x01f399b1438a100000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3253:3256  bet */\n      dup5\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3253:3267  bet * 36 ether */\n      tag_119\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_119:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3224:3268  payable(msg.sender).transfer(bet * 36 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3189:3295  if (determinant < 1) {... */\n      jump(tag_122)\n    tag_118:\n    tag_122:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3083:3301  {... */\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3031:3301  function G_thirtyfiveToOne(uint bet) payable public {... */\n      pop\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3351:3401  function H_deposit() payable public onlyOwner() {} */\n    tag_49:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":828:833  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":814:833  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":814:824  msg.sender */\n      caller\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":814:833  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":806:834  require(msg.sender == owner) */\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3351:3401  function H_deposit() payable public onlyOwner() {} */\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3407:3508  function I_withdraw(uint amount) public onlyOwner() {... */\n    tag_53:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":828:833  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":814:833  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":814:824  msg.sender */\n      caller\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":814:833  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":806:834  require(msg.sender == owner) */\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3469:3474  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3469:3483  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3469:3501  owner.transfer(amount * 1 ether) */\n      0x08fc\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3493:3500  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3484:3490  amount */\n      dup4\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3484:3500  amount * 1 ether */\n      tag_129\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_129:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3469:3501  owner.transfer(amount * 1 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":3407:3508  function I_withdraw(uint amount) public onlyOwner() {... */\n      pop\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2484:2750  function E_elevenToOne(uint bet) payable public {... */\n    tag_56:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2569:2576  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2563:2566  bet */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2563:2576  bet * 1 ether */\n      tag_133\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_133:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2550:2559  msg.value */\n      callvalue\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2550:2576  msg.value == bet * 1 ether */\n      eq\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2542:2577  require(msg.value == bet * 1 ether) */\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2587:2603  uint determinant */\n      0x00\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2626:2628  38 */\n      0x26\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2606:2623  getRandomNumber() */\n      tag_135\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2606:2621  getRandomNumber */\n      tag_62\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2606:2623  getRandomNumber() */\n      jump\t// in\n    tag_135:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2606:2628  getRandomNumber() % 38 */\n      tag_136\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_136:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2587:2628  uint determinant = getRandomNumber() % 38 */\n      swap1\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2656:2657  3 */\n      0x03\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2642:2653  determinant */\n      dup2\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2642:2657  determinant < 3 */\n      lt\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2638:2744  if (determinant < 3) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2681:2691  msg.sender */\n      caller\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2673:2701  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2673:2717  payable(msg.sender).transfer(bet * 12 ether) */\n      0x08fc\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2708:2716  12 ether */\n      0xa688906bd8b00000\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2702:2705  bet */\n      dup5\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2702:2716  bet * 12 ether */\n      tag_138\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_138:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2673:2717  payable(msg.sender).transfer(bet * 12 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2638:2744  if (determinant < 3) {... */\n      jump(tag_141)\n    tag_137:\n    tag_141:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2532:2750  {... */\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":2484:2750  function E_elevenToOne(uint bet) payable public {... */\n      pop\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1025:1195  function getRandomNumber() private view returns (uint) {... */\n    tag_62:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1074:1078  uint */\n      0x00\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1129:1150  address(this).balance */\n      selfbalance\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1152:1167  block.timestamp */\n      timestamp\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1169:1185  block.difficulty */\n      difficulty\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1112:1186  abi.encodePacked(address(this).balance, block.timestamp, block.difficulty) */\n      add(0x20, mload(0x40))\n      tag_143\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1102:1187  keccak256(abi.encodePacked(address(this).balance, block.timestamp, block.difficulty)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1097:1188  uint(keccak256(abi.encodePacked(address(this).balance, block.timestamp, block.difficulty))) */\n      0x00\n      shr\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1090:1188  return uint(keccak256(abi.encodePacked(address(this).balance, block.timestamp, block.difficulty))) */\n      swap1\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1025:1195  function getRandomNumber() private view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_146:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_148:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_149:\n        /* \"#utility.yul\":490:514   */\n      tag_165\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_148\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_166:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_150:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_168\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_149\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_17:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_171\n      tag_146\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":766:885   */\n    tag_170:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_172\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_150\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_151:\n        /* \"#utility.yul\":1112:1136   */\n      tag_174\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_148\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_29:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_176\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_151\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_152:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1613   */\n    tag_153:\n        /* \"#utility.yul\":1554:1561   */\n      0x00\n        /* \"#utility.yul\":1583:1607   */\n      tag_179\n        /* \"#utility.yul\":1601:1606   */\n      dup3\n        /* \"#utility.yul\":1583:1607   */\n      tag_152\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1572:1607   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1619:1761   */\n    tag_154:\n        /* \"#utility.yul\":1722:1754   */\n      tag_181\n        /* \"#utility.yul\":1748:1753   */\n      dup2\n        /* \"#utility.yul\":1722:1754   */\n      tag_153\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1717:1720   */\n      dup3\n        /* \"#utility.yul\":1710:1755   */\n      mstore\n        /* \"#utility.yul\":1619:1761   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1767:2021   */\n    tag_34:\n        /* \"#utility.yul\":1876:1880   */\n      0x00\n        /* \"#utility.yul\":1914:1916   */\n      0x20\n        /* \"#utility.yul\":1903:1912   */\n      dup3\n        /* \"#utility.yul\":1899:1917   */\n      add\n        /* \"#utility.yul\":1891:1917   */\n      swap1\n      pop\n        /* \"#utility.yul\":1927:2014   */\n      tag_183\n        /* \"#utility.yul\":2011:2012   */\n      0x00\n        /* \"#utility.yul\":2000:2009   */\n      dup4\n        /* \"#utility.yul\":1996:2013   */\n      add\n        /* \"#utility.yul\":1987:1993   */\n      dup5\n        /* \"#utility.yul\":1927:2014   */\n      tag_154\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1767:2021   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2027:2207   */\n    tag_155:\n        /* \"#utility.yul\":2075:2152   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2072:2073   */\n      0x00\n        /* \"#utility.yul\":2065:2153   */\n      mstore\n        /* \"#utility.yul\":2172:2176   */\n      0x11\n        /* \"#utility.yul\":2169:2170   */\n      0x04\n        /* \"#utility.yul\":2162:2177   */\n      mstore\n        /* \"#utility.yul\":2196:2200   */\n      0x24\n        /* \"#utility.yul\":2193:2194   */\n      0x00\n        /* \"#utility.yul\":2186:2201   */\n      revert\n        /* \"#utility.yul\":2213:2561   */\n    tag_59:\n        /* \"#utility.yul\":2253:2260   */\n      0x00\n        /* \"#utility.yul\":2276:2296   */\n      tag_186\n        /* \"#utility.yul\":2294:2295   */\n      dup3\n        /* \"#utility.yul\":2276:2296   */\n      tag_148\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2271:2296   */\n      swap2\n      pop\n        /* \"#utility.yul\":2310:2330   */\n      tag_187\n        /* \"#utility.yul\":2328:2329   */\n      dup4\n        /* \"#utility.yul\":2310:2330   */\n      tag_148\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2305:2330   */\n      swap3\n      pop\n        /* \"#utility.yul\":2498:2499   */\n      dup2\n        /* \"#utility.yul\":2430:2496   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2426:2500   */\n      div\n        /* \"#utility.yul\":2423:2424   */\n      dup4\n        /* \"#utility.yul\":2420:2501   */\n      gt\n        /* \"#utility.yul\":2415:2416   */\n      dup3\n        /* \"#utility.yul\":2408:2417   */\n      iszero\n        /* \"#utility.yul\":2401:2418   */\n      iszero\n        /* \"#utility.yul\":2397:2502   */\n      and\n        /* \"#utility.yul\":2394:2525   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":2505:2523   */\n      tag_189\n      tag_155\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2394:2525   */\n    tag_188:\n        /* \"#utility.yul\":2553:2554   */\n      dup3\n        /* \"#utility.yul\":2550:2551   */\n      dup3\n        /* \"#utility.yul\":2546:2555   */\n      mul\n        /* \"#utility.yul\":2535:2555   */\n      swap1\n      pop\n        /* \"#utility.yul\":2213:2561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2747   */\n    tag_156:\n        /* \"#utility.yul\":2615:2692   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2612:2613   */\n      0x00\n        /* \"#utility.yul\":2605:2693   */\n      mstore\n        /* \"#utility.yul\":2712:2716   */\n      0x12\n        /* \"#utility.yul\":2709:2710   */\n      0x04\n        /* \"#utility.yul\":2702:2717   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x24\n        /* \"#utility.yul\":2733:2734   */\n      0x00\n        /* \"#utility.yul\":2726:2741   */\n      revert\n        /* \"#utility.yul\":2753:2929   */\n    tag_64:\n        /* \"#utility.yul\":2785:2786   */\n      0x00\n        /* \"#utility.yul\":2802:2822   */\n      tag_192\n        /* \"#utility.yul\":2820:2821   */\n      dup3\n        /* \"#utility.yul\":2802:2822   */\n      tag_148\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2797:2822   */\n      swap2\n      pop\n        /* \"#utility.yul\":2836:2856   */\n      tag_193\n        /* \"#utility.yul\":2854:2855   */\n      dup4\n        /* \"#utility.yul\":2836:2856   */\n      tag_148\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2831:2856   */\n      swap3\n      pop\n        /* \"#utility.yul\":2875:2876   */\n      dup3\n        /* \"#utility.yul\":2865:2900   */\n      tag_194\n      jumpi\n        /* \"#utility.yul\":2880:2898   */\n      tag_195\n      tag_156\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2865:2900   */\n    tag_194:\n        /* \"#utility.yul\":2921:2922   */\n      dup3\n        /* \"#utility.yul\":2918:2919   */\n      dup3\n        /* \"#utility.yul\":2914:2923   */\n      mod\n        /* \"#utility.yul\":2909:2923   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2929   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2935:3014   */\n    tag_157:\n        /* \"#utility.yul\":2974:2981   */\n      0x00\n        /* \"#utility.yul\":3003:3008   */\n      dup2\n        /* \"#utility.yul\":2992:3008   */\n      swap1\n      pop\n        /* \"#utility.yul\":2935:3014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3020:3177   */\n    tag_158:\n        /* \"#utility.yul\":3125:3170   */\n      tag_198\n        /* \"#utility.yul\":3145:3169   */\n      tag_199\n        /* \"#utility.yul\":3163:3168   */\n      dup3\n        /* \"#utility.yul\":3145:3169   */\n      tag_148\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3125:3170   */\n      tag_157\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3120:3123   */\n      dup3\n        /* \"#utility.yul\":3113:3171   */\n      mstore\n        /* \"#utility.yul\":3020:3177   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3183:3721   */\n    tag_144:\n        /* \"#utility.yul\":3351:3354   */\n      0x00\n        /* \"#utility.yul\":3366:3441   */\n      tag_201\n        /* \"#utility.yul\":3437:3440   */\n      dup3\n        /* \"#utility.yul\":3428:3434   */\n      dup7\n        /* \"#utility.yul\":3366:3441   */\n      tag_158\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3466:3468   */\n      0x20\n        /* \"#utility.yul\":3461:3464   */\n      dup3\n        /* \"#utility.yul\":3457:3469   */\n      add\n        /* \"#utility.yul\":3450:3469   */\n      swap2\n      pop\n        /* \"#utility.yul\":3479:3554   */\n      tag_202\n        /* \"#utility.yul\":3550:3553   */\n      dup3\n        /* \"#utility.yul\":3541:3547   */\n      dup6\n        /* \"#utility.yul\":3479:3554   */\n      tag_158\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3579:3581   */\n      0x20\n        /* \"#utility.yul\":3574:3577   */\n      dup3\n        /* \"#utility.yul\":3570:3582   */\n      add\n        /* \"#utility.yul\":3563:3582   */\n      swap2\n      pop\n        /* \"#utility.yul\":3592:3667   */\n      tag_203\n        /* \"#utility.yul\":3663:3666   */\n      dup3\n        /* \"#utility.yul\":3654:3660   */\n      dup5\n        /* \"#utility.yul\":3592:3667   */\n      tag_158\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3692:3694   */\n      0x20\n        /* \"#utility.yul\":3687:3690   */\n      dup3\n        /* \"#utility.yul\":3683:3695   */\n      add\n        /* \"#utility.yul\":3676:3695   */\n      swap2\n      pop\n        /* \"#utility.yul\":3712:3715   */\n      dup2\n        /* \"#utility.yul\":3705:3715   */\n      swap1\n      pop\n        /* \"#utility.yul\":3183:3721   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209d3d558533c886fad151d45af0642437f58d511500bae16a67873dfd0e52aab664736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b1b806100606000396000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101725780638fb179731461019d578063bed2e0c3146101b9578063e8d18212146101d5578063f855aa9e146101df578063ff65d09014610208576100a7565b806307d0394c146100ac57806314fbb92b146100c85780631640e34e146100e4578063374ccd331461010057806348db5f891461012b5780634eca877214610156575b600080fd5b6100c660048036038101906100c191906108eb565b610224565b005b6100e260048036038101906100dd91906108eb565b6102c8565b005b6100fe60048036038101906100f991906108eb565b61036c565b005b34801561010c57600080fd5b50610115610410565b6040516101229190610927565b60405180910390f35b34801561013757600080fd5b50610140610471565b60405161014d9190610983565b60405180910390f35b610170600480360381019061016b91906108eb565b610497565b005b34801561017e57600080fd5b5061018761053b565b6040516101949190610983565b60405180910390f35b6101b760048036038101906101b291906108eb565b61055f565b005b6101d360048036038101906101ce91906108eb565b610603565b005b6101dd6106a8565b005b3480156101eb57600080fd5b50610206600480360381019061020191906108eb565b610702565b005b610222600480360381019061021d91906108eb565b6107d7565b005b670de0b6b3a76400008161023891906109cd565b341461024357600080fd5b6000602661024f61087b565b6102599190610a56565b905060028110156102c3573373ffffffffffffffffffffffffffffffffffffffff166108fc67f9ccd8a1c50800008461029291906109cd565b9081150290604051600060405180830381858888f193505050501580156102bd573d6000803e3d6000fd5b506102c4565b5b5050565b670de0b6b3a7640000816102dc91906109cd565b34146102e757600080fd5b600060266102f361087b565b6102fd9190610a56565b90506006811015610367573373ffffffffffffffffffffffffffffffffffffffff166108fc6753444835ec5800008461033691906109cd565b9081150290604051600060405180830381858888f19350505050158015610361573d6000803e3d6000fd5b50610368565b5b5050565b670de0b6b3a76400008161038091906109cd565b341461038b57600080fd5b6000602661039761087b565b6103a19190610a56565b9050601281101561040b573373ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec80000846103da91906109cd565b9081150290604051600060405180830381858888f19350505050158015610405573d6000803e3d6000fd5b5061040c565b5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461046b57600080fd5b47905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a7640000816104ab91906109cd565b34146104b657600080fd5b600060266104c261087b565b6104cc9190610a56565b9050600c811015610536573373ffffffffffffffffffffffffffffffffffffffff166108fc6729a2241af62c00008461050591906109cd565b9081150290604051600060405180830381858888f19350505050158015610530573d6000803e3d6000fd5b50610537565b5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a76400008161057391906109cd565b341461057e57600080fd5b6000602661058a61087b565b6105949190610a56565b905060048110156105fe573373ffffffffffffffffffffffffffffffffffffffff166108fc677ce66c50e2840000846105cd91906109cd565b9081150290604051600060405180830381858888f193505050501580156105f8573d6000803e3d6000fd5b506105ff565b5b5050565b670de0b6b3a76400008161061791906109cd565b341461062257600080fd5b6000602661062e61087b565b6106389190610a56565b905060018110156106a3573373ffffffffffffffffffffffffffffffffffffffff166108fc6801f399b1438a1000008461067291906109cd565b9081150290604051600060405180830381858888f1935050505015801561069d573d6000803e3d6000fd5b506106a4565b5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070057600080fd5b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461075a57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a7640000836107a891906109cd565b9081150290604051600060405180830381858888f193505050501580156107d3573d6000803e3d6000fd5b5050565b670de0b6b3a7640000816107eb91906109cd565b34146107f657600080fd5b6000602661080261087b565b61080c9190610a56565b90506003811015610876573373ffffffffffffffffffffffffffffffffffffffff166108fc67a688906bd8b000008461084591906109cd565b9081150290604051600060405180830381858888f19350505050158015610870573d6000803e3d6000fd5b50610877565b5b5050565b600047424460405160200161089293929190610aa8565b6040516020818303038152906040528051906020012060001c905090565b600080fd5b6000819050919050565b6108c8816108b5565b81146108d357600080fd5b50565b6000813590506108e5816108bf565b92915050565b600060208284031215610901576109006108b0565b5b600061090f848285016108d6565b91505092915050565b610921816108b5565b82525050565b600060208201905061093c6000830184610918565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061096d82610942565b9050919050565b61097d81610962565b82525050565b60006020820190506109986000830184610974565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d8826108b5565b91506109e3836108b5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a1c57610a1b61099e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a61826108b5565b9150610a6c836108b5565b925082610a7c57610a7b610a27565b5b828206905092915050565b6000819050919050565b610aa2610a9d826108b5565b610a87565b82525050565b6000610ab48286610a91565b602082019150610ac48285610a91565b602082019150610ad48284610a91565b60208201915081905094935050505056fea26469706673582212209d3d558533c886fad151d45af0642437f58d511500bae16a67873dfd0e52aab664736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xB1B DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x8FB17973 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xBED2E0C3 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xE8D18212 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xF855AA9E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xFF65D090 EQ PUSH2 0x208 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x7D0394C EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x14FBB92B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x1640E34E EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x374CCD33 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x48DB5F89 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x4ECA8772 EQ PUSH2 0x156 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH2 0x53B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH2 0x6A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x24F PUSH2 0x87B JUMP JUMPDEST PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2C3 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xF9CCD8A1C5080000 DUP5 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x2C4 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x2F3 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x367 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x53444835EC580000 DUP5 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x361 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x368 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x397 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 DUP2 LT ISZERO PUSH2 0x40B JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x1BC16D674EC80000 DUP5 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x40C JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x4C2 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0xC DUP2 LT ISZERO PUSH2 0x536 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x29A2241AF62C0000 DUP5 PUSH2 0x505 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x537 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x58A PUSH2 0x87B JUMP JUMPDEST PUSH2 0x594 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5FE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x7CE66C50E2840000 DUP5 PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x5FF JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x62E PUSH2 0x87B JUMP JUMPDEST PUSH2 0x638 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x6A3 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH9 0x1F399B1438A100000 DUP5 PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x69D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x6A4 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x802 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x80C SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x876 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xA688906BD8B00000 DUP5 PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x870 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x877 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE TIMESTAMP DIFFICULTY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x892 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C8 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x8D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8E5 DUP2 PUSH2 0x8BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x901 JUMPI PUSH2 0x900 PUSH2 0x8B0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x90F DUP5 DUP3 DUP6 ADD PUSH2 0x8D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x921 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x93C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x918 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96D DUP3 PUSH2 0x942 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97D DUP2 PUSH2 0x962 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x998 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x974 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9D8 DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x9E3 DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0x99E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA61 DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0xA6C DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0xA27 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA2 PUSH2 0xA9D DUP3 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB4 DUP3 DUP7 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xAC4 DUP3 DUP6 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xAD4 DUP3 DUP5 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 RETURNDATASIZE SSTORE DUP6 CALLER 0xC8 DUP7 STATICCALL 0xD1 MLOAD 0xD4 GAS CREATE PUSH5 0x2437F58D51 ISZERO STOP 0xBA 0xE1 PUSH11 0x67873DFD0E52AAB664736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "547:3132:0:-:0;;;674:58;;;;;;;;;;714:10;698:5;;:27;;;;;;;;;;;;;;;;;;547:3132;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@A_oneToOne_91": {
									"entryPoint": 876,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@B_twoToOne_130": {
									"entryPoint": 1175,
									"id": 130,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@C_fiveToOne_169": {
									"entryPoint": 712,
									"id": 169,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@D_eightToOne_208": {
									"entryPoint": 1375,
									"id": 208,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@E_elevenToOne_247": {
									"entryPoint": 2007,
									"id": 247,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@F_seventeenToOne_286": {
									"entryPoint": 548,
									"id": 286,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@G_thirtyfiveToOne_325": {
									"entryPoint": 1539,
									"id": 325,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@H_deposit_331": {
									"entryPoint": 1704,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@I_withdraw_347": {
									"entryPoint": 1794,
									"id": 347,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@J_getBalance_361": {
									"entryPoint": 1040,
									"id": 361,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRandomNumber_52": {
									"entryPoint": 2171,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_3": {
									"entryPoint": 1339,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@player_5": {
									"entryPoint": 1137,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 2420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 2705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 2435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 2695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 2646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2462,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3724:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:1",
														"type": ""
													}
												],
												"src": "1025:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													}
												],
												"src": "1149:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:1",
														"type": ""
													}
												],
												"src": "1377:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1562:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1572:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1601:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1583:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1572:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1544:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1554:7:1",
														"type": ""
													}
												],
												"src": "1509:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1700:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1717:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1748:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1722:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1722:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1710:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1688:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1695:3:1",
														"type": ""
													}
												],
												"src": "1619:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1881:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1891:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1903:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1914:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1899:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1899:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1891:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1987:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2011:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1996:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1996:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1927:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1927:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1927:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1853:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1865:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1876:4:1",
														"type": ""
													}
												],
												"src": "1767:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2055:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2072:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2075:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2065:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2065:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2065:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2169:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2172:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2162:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2193:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2196:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2186:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2186:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2027:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2261:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2271:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2294:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2276:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2271:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2305:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2328:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2310:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2310:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2305:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2503:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2505:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2505:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2505:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2415:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2408:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2408:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2401:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2401:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2423:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2430:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2498:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2426:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2426:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2420:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2420:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2397:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:105:1"
															},
															"nodeType": "YulIf",
															"src": "2394:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2535:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2550:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2553:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2535:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2244:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2247:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2253:7:1",
														"type": ""
													}
												],
												"src": "2213:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2595:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2612:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2615:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2605:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2605:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2605:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2709:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2702:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2702:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2702:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2736:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2726:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2567:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2787:142:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2797:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2820:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2802:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2797:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2831:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2836:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2836:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2831:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2878:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2880:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2880:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2880:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2875:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2868:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2868:9:1"
															},
															"nodeType": "YulIf",
															"src": "2865:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2909:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2918:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2921:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "2914:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2914:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2909:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2776:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2779:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2785:1:1",
														"type": ""
													}
												],
												"src": "2753:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2982:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2992:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3003:5:1"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "2992:7:1"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2964:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "2974:7:1",
														"type": ""
													}
												],
												"src": "2935:79:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3103:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3120:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3163:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3145:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3145:24:1"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3125:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3125:45:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3113:58:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3091:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3098:3:1",
														"type": ""
													}
												],
												"src": "3020:157:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3355:366:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3428:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3437:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3366:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3366:75:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3450:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3461:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3466:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3457:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3457:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3450:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3541:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3550:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3479:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3479:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3479:75:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3563:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3574:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3579:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3570:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3570:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3563:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3654:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3663:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3592:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3592:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3592:75:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3676:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3687:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3683:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3683:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3676:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3705:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3712:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3705:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3318:3:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3324:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3332:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3340:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3351:3:1",
														"type": ""
													}
												],
												"src": "3183:538:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101725780638fb179731461019d578063bed2e0c3146101b9578063e8d18212146101d5578063f855aa9e146101df578063ff65d09014610208576100a7565b806307d0394c146100ac57806314fbb92b146100c85780631640e34e146100e4578063374ccd331461010057806348db5f891461012b5780634eca877214610156575b600080fd5b6100c660048036038101906100c191906108eb565b610224565b005b6100e260048036038101906100dd91906108eb565b6102c8565b005b6100fe60048036038101906100f991906108eb565b61036c565b005b34801561010c57600080fd5b50610115610410565b6040516101229190610927565b60405180910390f35b34801561013757600080fd5b50610140610471565b60405161014d9190610983565b60405180910390f35b610170600480360381019061016b91906108eb565b610497565b005b34801561017e57600080fd5b5061018761053b565b6040516101949190610983565b60405180910390f35b6101b760048036038101906101b291906108eb565b61055f565b005b6101d360048036038101906101ce91906108eb565b610603565b005b6101dd6106a8565b005b3480156101eb57600080fd5b50610206600480360381019061020191906108eb565b610702565b005b610222600480360381019061021d91906108eb565b6107d7565b005b670de0b6b3a76400008161023891906109cd565b341461024357600080fd5b6000602661024f61087b565b6102599190610a56565b905060028110156102c3573373ffffffffffffffffffffffffffffffffffffffff166108fc67f9ccd8a1c50800008461029291906109cd565b9081150290604051600060405180830381858888f193505050501580156102bd573d6000803e3d6000fd5b506102c4565b5b5050565b670de0b6b3a7640000816102dc91906109cd565b34146102e757600080fd5b600060266102f361087b565b6102fd9190610a56565b90506006811015610367573373ffffffffffffffffffffffffffffffffffffffff166108fc6753444835ec5800008461033691906109cd565b9081150290604051600060405180830381858888f19350505050158015610361573d6000803e3d6000fd5b50610368565b5b5050565b670de0b6b3a76400008161038091906109cd565b341461038b57600080fd5b6000602661039761087b565b6103a19190610a56565b9050601281101561040b573373ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec80000846103da91906109cd565b9081150290604051600060405180830381858888f19350505050158015610405573d6000803e3d6000fd5b5061040c565b5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461046b57600080fd5b47905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a7640000816104ab91906109cd565b34146104b657600080fd5b600060266104c261087b565b6104cc9190610a56565b9050600c811015610536573373ffffffffffffffffffffffffffffffffffffffff166108fc6729a2241af62c00008461050591906109cd565b9081150290604051600060405180830381858888f19350505050158015610530573d6000803e3d6000fd5b50610537565b5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a76400008161057391906109cd565b341461057e57600080fd5b6000602661058a61087b565b6105949190610a56565b905060048110156105fe573373ffffffffffffffffffffffffffffffffffffffff166108fc677ce66c50e2840000846105cd91906109cd565b9081150290604051600060405180830381858888f193505050501580156105f8573d6000803e3d6000fd5b506105ff565b5b5050565b670de0b6b3a76400008161061791906109cd565b341461062257600080fd5b6000602661062e61087b565b6106389190610a56565b905060018110156106a3573373ffffffffffffffffffffffffffffffffffffffff166108fc6801f399b1438a1000008461067291906109cd565b9081150290604051600060405180830381858888f1935050505015801561069d573d6000803e3d6000fd5b506106a4565b5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070057600080fd5b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461075a57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a7640000836107a891906109cd565b9081150290604051600060405180830381858888f193505050501580156107d3573d6000803e3d6000fd5b5050565b670de0b6b3a7640000816107eb91906109cd565b34146107f657600080fd5b6000602661080261087b565b61080c9190610a56565b90506003811015610876573373ffffffffffffffffffffffffffffffffffffffff166108fc67a688906bd8b000008461084591906109cd565b9081150290604051600060405180830381858888f19350505050158015610870573d6000803e3d6000fd5b50610877565b5b5050565b600047424460405160200161089293929190610aa8565b6040516020818303038152906040528051906020012060001c905090565b600080fd5b6000819050919050565b6108c8816108b5565b81146108d357600080fd5b50565b6000813590506108e5816108bf565b92915050565b600060208284031215610901576109006108b0565b5b600061090f848285016108d6565b91505092915050565b610921816108b5565b82525050565b600060208201905061093c6000830184610918565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061096d82610942565b9050919050565b61097d81610962565b82525050565b60006020820190506109986000830184610974565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d8826108b5565b91506109e3836108b5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a1c57610a1b61099e565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a61826108b5565b9150610a6c836108b5565b925082610a7c57610a7b610a27565b5b828206905092915050565b6000819050919050565b610aa2610a9d826108b5565b610a87565b82525050565b6000610ab48286610a91565b602082019150610ac48285610a91565b602082019150610ad48284610a91565b60208201915081905094935050505056fea26469706673582212209d3d558533c886fad151d45af0642437f58d511500bae16a67873dfd0e52aab664736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x8FB17973 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xBED2E0C3 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xE8D18212 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xF855AA9E EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xFF65D090 EQ PUSH2 0x208 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x7D0394C EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x14FBB92B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x1640E34E EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x374CCD33 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x48DB5F89 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x4ECA8772 EQ PUSH2 0x156 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x187 PUSH2 0x53B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DD PUSH2 0x6A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x24F PUSH2 0x87B JUMP JUMPDEST PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2C3 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xF9CCD8A1C5080000 DUP5 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x2C4 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x2F3 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x367 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x53444835EC580000 DUP5 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x361 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x368 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x397 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 DUP2 LT ISZERO PUSH2 0x40B JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x1BC16D674EC80000 DUP5 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x405 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x40C JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x4C2 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x4CC SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0xC DUP2 LT ISZERO PUSH2 0x536 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x29A2241AF62C0000 DUP5 PUSH2 0x505 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x537 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x58A PUSH2 0x87B JUMP JUMPDEST PUSH2 0x594 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x5FE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x7CE66C50E2840000 DUP5 PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x5FF JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x62E PUSH2 0x87B JUMP JUMPDEST PUSH2 0x638 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 LT ISZERO PUSH2 0x6A3 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH9 0x1F399B1438A100000 DUP5 PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x69D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x6A4 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST CALLVALUE EQ PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x26 PUSH2 0x802 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x80C SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x876 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xA688906BD8B00000 DUP5 PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x9CD JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x870 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x877 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE TIMESTAMP DIFFICULTY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x892 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C8 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x8D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8E5 DUP2 PUSH2 0x8BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x901 JUMPI PUSH2 0x900 PUSH2 0x8B0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x90F DUP5 DUP3 DUP6 ADD PUSH2 0x8D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x921 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x93C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x918 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96D DUP3 PUSH2 0x942 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97D DUP2 PUSH2 0x962 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x998 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x974 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9D8 DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x9E3 DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0x99E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA61 DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0xA6C DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0xA27 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA2 PUSH2 0xA9D DUP3 PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB4 DUP3 DUP7 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xAC4 DUP3 DUP6 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xAD4 DUP3 DUP5 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 RETURNDATASIZE SSTORE DUP6 CALLER 0xC8 DUP7 STATICCALL 0xD1 MLOAD 0xD4 GAS CREATE PUSH5 0x2437F58D51 ISZERO STOP 0xBA 0xE1 PUSH11 0x67873DFD0E52AAB664736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "547:3132:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2756:269;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1945:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3564:108;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;606:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1676:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;572:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2214:264;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3031:270;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3351:50;;;:::i;:::-;;3407:101;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2484:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2756:269;2844:7;2838:3;:13;;;;:::i;:::-;2825:9;:26;2817:35;;;;;;2862:16;2901:2;2881:17;:15;:17::i;:::-;:22;;;;:::i;:::-;2862:41;;2931:1;2917:11;:15;2913:106;;;2956:10;2948:28;;:44;2983:8;2977:3;:14;;;;:::i;:::-;2948:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2913:106;;;;2807:218;2756:269;:::o;1945:263::-;2028:7;2022:3;:13;;;;:::i;:::-;2009:9;:26;2001:35;;;;;;2046:16;2085:2;2065:17;:15;:17::i;:::-;:22;;;;:::i;:::-;2046:41;;2115:1;2101:11;:15;2097:105;;;2140:10;2132:28;;:43;2167:7;2161:3;:13;;;;:::i;:::-;2132:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2097:105;;;;1991:217;1945:263;:::o;1407:::-;1489:7;1483:3;:13;;;;:::i;:::-;1470:9;:26;1462:35;;;;;;1507:16;1546:2;1526:17;:15;:17::i;:::-;:22;;;;:::i;:::-;1507:41;;1576:2;1562:11;:16;1558:106;;;1602:10;1594:28;;:43;1629:7;1623:3;:13;;;;:::i;:::-;1594:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1558:106;;;;1452:218;1407:263;:::o;3564:108::-;3621:4;828:5;;;;;;;;;;;814:19;;:10;:19;;;806:28;;;;;;3644:21:::1;3637:28;;3564:108:::0;:::o;606:29::-;;;;;;;;;;;;;:::o;1676:263::-;1758:7;1752:3;:13;;;;:::i;:::-;1739:9;:26;1731:35;;;;;;1776:16;1815:2;1795:17;:15;:17::i;:::-;:22;;;;:::i;:::-;1776:41;;1845:2;1831:11;:16;1827:106;;;1871:10;1863:28;;:43;1898:7;1892:3;:13;;;;:::i;:::-;1863:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1827:106;;;;1721:218;1676:263;:::o;572:28::-;;;;;;;;;;;;:::o;2214:264::-;2298:7;2292:3;:13;;;;:::i;:::-;2279:9;:26;2271:35;;;;;;2316:16;2355:2;2335:17;:15;:17::i;:::-;:22;;;;:::i;:::-;2316:41;;2385:1;2371:11;:15;2367:105;;;2410:10;2402:28;;:43;2437:7;2431:3;:13;;;;:::i;:::-;2402:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:105;;;;2261:217;2214:264;:::o;3031:270::-;3120:7;3114:3;:13;;;;:::i;:::-;3101:9;:26;3093:35;;;;;;3138:16;3177:2;3157:17;:15;:17::i;:::-;:22;;;;:::i;:::-;3138:41;;3207:1;3193:11;:15;3189:106;;;3232:10;3224:28;;:44;3259:8;3253:3;:14;;;;:::i;:::-;3224:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3189:106;;;;3083:218;3031:270;:::o;3351:50::-;828:5;;;;;;;;;;814:19;;:10;:19;;;806:28;;;;;;3351:50::o;3407:101::-;828:5;;;;;;;;;;814:19;;:10;:19;;;806:28;;;;;;3469:5:::1;::::0;::::1;;;;;;;;:14;;:32;3493:7;3484:6;:16;;;;:::i;:::-;3469:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3407:101:::0;:::o;2484:266::-;2569:7;2563:3;:13;;;;:::i;:::-;2550:9;:26;2542:35;;;;;;2587:16;2626:2;2606:17;:15;:17::i;:::-;:22;;;;:::i;:::-;2587:41;;2656:1;2642:11;:15;2638:106;;;2681:10;2673:28;;:44;2708:8;2702:3;:14;;;;:::i;:::-;2673:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2638:106;;;;2532:218;2484:266;:::o;1025:170::-;1074:4;1129:21;1152:15;1169:16;1112:74;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1102:85;;;;;;1097:91;;1090:98;;1025:170;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:104::-;1554:7;1583:24;1601:5;1583:24;:::i;:::-;1572:35;;1509:104;;;:::o;1619:142::-;1722:32;1748:5;1722:32;:::i;:::-;1717:3;1710:45;1619:142;;:::o;1767:254::-;1876:4;1914:2;1903:9;1899:18;1891:26;;1927:87;2011:1;2000:9;1996:17;1987:6;1927:87;:::i;:::-;1767:254;;;;:::o;2027:180::-;2075:77;2072:1;2065:88;2172:4;2169:1;2162:15;2196:4;2193:1;2186:15;2213:348;2253:7;2276:20;2294:1;2276:20;:::i;:::-;2271:25;;2310:20;2328:1;2310:20;:::i;:::-;2305:25;;2498:1;2430:66;2426:74;2423:1;2420:81;2415:1;2408:9;2401:17;2397:105;2394:131;;;2505:18;;:::i;:::-;2394:131;2553:1;2550;2546:9;2535:20;;2213:348;;;;:::o;2567:180::-;2615:77;2612:1;2605:88;2712:4;2709:1;2702:15;2736:4;2733:1;2726:15;2753:176;2785:1;2802:20;2820:1;2802:20;:::i;:::-;2797:25;;2836:20;2854:1;2836:20;:::i;:::-;2831:25;;2875:1;2865:35;;2880:18;;:::i;:::-;2865:35;2921:1;2918;2914:9;2909:14;;2753:176;;;;:::o;2935:79::-;2974:7;3003:5;2992:16;;2935:79;;;:::o;3020:157::-;3125:45;3145:24;3163:5;3145:24;:::i;:::-;3125:45;:::i;:::-;3120:3;3113:58;3020:157;;:::o;3183:538::-;3351:3;3366:75;3437:3;3428:6;3366:75;:::i;:::-;3466:2;3461:3;3457:12;3450:19;;3479:75;3550:3;3541:6;3479:75;:::i;:::-;3579:2;3574:3;3570:12;3563:19;;3592:75;3663:3;3654:6;3592:75;:::i;:::-;3692:2;3687:3;3683:12;3676:19;;3712:3;3705:10;;3183:538;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "568600",
								"executionCost": "24866",
								"totalCost": "593466"
							},
							"external": {
								"A_oneToOne(uint256)": "infinite",
								"B_twoToOne(uint256)": "infinite",
								"C_fiveToOne(uint256)": "infinite",
								"D_eightToOne(uint256)": "infinite",
								"E_elevenToOne(uint256)": "infinite",
								"F_seventeenToOne(uint256)": "infinite",
								"G_thirtyfiveToOne(uint256)": "infinite",
								"H_deposit()": "2353",
								"I_withdraw(uint256)": "infinite",
								"J_getBalance()": "2576",
								"owner()": "2511",
								"player()": "2603"
							},
							"internal": {
								"getRandomNumber()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 547,
									"end": 3679,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 547,
									"end": 3679,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 547,
									"end": 3679,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 674,
									"end": 732,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 674,
									"end": 732,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 674,
									"end": 732,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 674,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 674,
									"end": 732,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 674,
									"end": 732,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 674,
									"end": 732,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 674,
									"end": 732,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 674,
									"end": 732,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 674,
									"end": 732,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 674,
									"end": 732,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 714,
									"end": 724,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 698,
									"end": 703,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 703,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 698,
									"end": 725,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 698,
									"end": 725,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 698,
									"end": 725,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 698,
									"end": 725,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 547,
									"end": 3679,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 547,
									"end": 3679,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 547,
									"end": 3679,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 547,
									"end": 3679,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 547,
									"end": 3679,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 547,
									"end": 3679,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 547,
									"end": 3679,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d3d558533c886fad151d45af0642437f58d511500bae16a67873dfd0e52aab664736f6c634300080f0033",
									".code": [
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "8FB17973"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "BED2E0C3"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "E8D18212"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "F855AA9E"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "FF65D090"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "7D0394C"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "14FBB92B"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "1640E34E"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "374CCD33"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "48DB5F89"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "4ECA8772"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 3679,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2756,
											"end": 3025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2756,
											"end": 3025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1945,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1945,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1407,
											"end": 1670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1407,
											"end": 1670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3564,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3564,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 606,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 606,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1676,
											"end": 1939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1676,
											"end": 1939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 572,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2214,
											"end": 2478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2214,
											"end": 2478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3031,
											"end": 3301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3031,
											"end": 3301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3401,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3351,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3351,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3351,
											"end": 3401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3401,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3351,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3401,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3407,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3407,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2484,
											"end": 2750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2484,
											"end": 2750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2851,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2838,
											"end": 2841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2838,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2838,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2838,
											"end": 2851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2838,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2838,
											"end": 2851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2838,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2838,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2834,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2817,
											"end": 2852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2852,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2852,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2817,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2903,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2881,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2881,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2881,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2881,
											"end": 2898,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2881,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2881,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2881,
											"end": 2903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2881,
											"end": 2903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2881,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2881,
											"end": 2903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2881,
											"end": 2903,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2881,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2862,
											"end": 2903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2862,
											"end": 2903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2932,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2917,
											"end": 2928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2913,
											"end": 3019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2956,
											"end": 2966,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2948,
											"end": 2976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 2983,
											"end": 2991,
											"name": "PUSH",
											"source": 0,
											"value": "F9CCD8A1C5080000"
										},
										{
											"begin": 2977,
											"end": 2980,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2977,
											"end": 2991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2913,
											"end": 3019,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3019,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2913,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2913,
											"end": 3019,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2913,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 3025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2022,
											"end": 2035,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2022,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2022,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2018,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2035,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2001,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2036,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2001,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2087,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2065,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2065,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2065,
											"end": 2087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2065,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2087,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2065,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2101,
											"end": 2112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2101,
											"end": 2116,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2097,
											"end": 2202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2160,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 2167,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "53444835EC580000"
										},
										{
											"begin": 2161,
											"end": 2164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2161,
											"end": 2174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2161,
											"end": 2174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2174,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2161,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2097,
											"end": 2202,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2097,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2097,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2097,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1489,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1483,
											"end": 1486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1483,
											"end": 1496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1483,
											"end": 1496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1496,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1483,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1479,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1462,
											"end": 1497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1497,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1497,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1462,
											"end": 1497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1548,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1526,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1526,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1526,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1526,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1526,
											"end": 1548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1526,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1548,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1526,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1578,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1562,
											"end": 1573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1562,
											"end": 1578,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1558,
											"end": 1664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1612,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1629,
											"end": 1636,
											"name": "PUSH",
											"source": 0,
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 1623,
											"end": 1626,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1623,
											"end": 1636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1623,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1636,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1623,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1558,
											"end": 1664,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1664,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1558,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1664,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1558,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3621,
											"end": 3625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 828,
											"end": 833,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 828,
											"end": 833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 814,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 814,
											"end": 824,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 814,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 814,
											"end": 833,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 806,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 806,
											"end": 834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 806,
											"end": 834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 834,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 806,
											"end": 834,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 806,
											"end": 834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3665,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3665,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 606,
											"end": 635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1758,
											"end": 1765,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1752,
											"end": 1755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1752,
											"end": 1765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1752,
											"end": 1765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1765,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1752,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1748,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1731,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1731,
											"end": 1766,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1731,
											"end": 1766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1731,
											"end": 1766,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1731,
											"end": 1766,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1731,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1817,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1795,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1795,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1795,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1812,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1795,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1795,
											"end": 1817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1795,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1817,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1795,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1847,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 1831,
											"end": 1842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1847,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1827,
											"end": 1933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 1881,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1891,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1863,
											"end": 1891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1898,
											"end": 1905,
											"name": "PUSH",
											"source": 0,
											"value": "29A2241AF62C0000"
										},
										{
											"begin": 1892,
											"end": 1895,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1892,
											"end": 1905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1892,
											"end": 1905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1905,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1892,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1863,
											"end": 1906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1827,
											"end": 1933,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1933,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1827,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1933,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1827,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1721,
											"end": 1939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 572,
											"end": 600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 572,
											"end": 600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2292,
											"end": 2295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2292,
											"end": 2305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2292,
											"end": 2305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2292,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2288,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2305,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2271,
											"end": 2306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2271,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2357,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2335,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2335,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2335,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2352,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2335,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2335,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2386,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2371,
											"end": 2382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2371,
											"end": 2386,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2367,
											"end": 2472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2420,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 2437,
											"end": 2444,
											"name": "PUSH",
											"source": 0,
											"value": "7CE66C50E2840000"
										},
										{
											"begin": 2431,
											"end": 2434,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2431,
											"end": 2444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2431,
											"end": 2444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2444,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2431,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2367,
											"end": 2472,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2472,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2367,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2472,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2367,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3120,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3114,
											"end": 3117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3114,
											"end": 3127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3114,
											"end": 3127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3127,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3114,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3110,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3127,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3093,
											"end": 3128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3128,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3128,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3093,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3179,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3157,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3157,
											"end": 3174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3174,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3157,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3157,
											"end": 3179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3157,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3179,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3157,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3208,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3193,
											"end": 3204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3189,
											"end": 3295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3259,
											"end": 3267,
											"name": "PUSH",
											"source": 0,
											"value": "1F399B1438A100000"
										},
										{
											"begin": 3253,
											"end": 3256,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3253,
											"end": 3267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3253,
											"end": 3267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3253,
											"end": 3267,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3253,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3224,
											"end": 3268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3189,
											"end": 3295,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3189,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3189,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3189,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3401,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3351,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 828,
											"end": 833,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 828,
											"end": 833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 814,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 814,
											"end": 824,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 814,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 814,
											"end": 833,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 806,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 806,
											"end": 834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 806,
											"end": 834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 834,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 806,
											"end": 834,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 806,
											"end": 834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3351,
											"end": 3401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 828,
											"end": 833,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 828,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 828,
											"end": 833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 814,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 814,
											"end": 824,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 814,
											"end": 833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 814,
											"end": 833,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 806,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 806,
											"end": 834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 806,
											"end": 834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 834,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 806,
											"end": 834,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 806,
											"end": 834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3474,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3469,
											"end": 3474,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3474,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3469,
											"end": 3474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3469,
											"end": 3483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 3493,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3484,
											"end": 3490,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3484,
											"end": 3500,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3407,
											"end": 3508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2563,
											"end": 2566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2563,
											"end": 2576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2563,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2576,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2563,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2542,
											"end": 2577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2577,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2577,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2542,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2606,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2606,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2606,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2606,
											"end": 2628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2606,
											"end": 2628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2628,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2606,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2656,
											"end": 2657,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2642,
											"end": 2653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2657,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2638,
											"end": 2744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2681,
											"end": 2691,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2701,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 2708,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "A688906BD8B00000"
										},
										{
											"begin": 2702,
											"end": 2705,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2702,
											"end": 2716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2702,
											"end": 2716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2716,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2702,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2638,
											"end": 2744,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2744,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2638,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2638,
											"end": 2744,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2638,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2532,
											"end": 2750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1195,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1025,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1078,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1150,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1167,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1185,
											"name": "DIFFICULTY",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1112,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1102,
											"end": 1187,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1188,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1583,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1583,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1619,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1722,
											"end": 1754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1754,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1722,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1755,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1767,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1916,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1903,
											"end": 1912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 1917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 1917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2011,
											"end": 2012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1927,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 2014,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1927,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 2021,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 2021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 2021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2207,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2027,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2176,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2169,
											"end": 2170,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2177,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2200,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2193,
											"end": 2194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2201,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2561,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2213,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2276,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2296,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2276,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2296,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2310,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2330,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2496,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2426,
											"end": 2500,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2501,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2416,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2417,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2418,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2502,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2525,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2394,
											"end": 2525,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2505,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2505,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2525,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2394,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2555,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2747,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2567,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2692,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2612,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2709,
											"end": 2710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2702,
											"end": 2717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2929,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2753,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2820,
											"end": 2821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2802,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2822,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2802,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2836,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2856,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2836,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2856,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2880,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2865,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 2922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2918,
											"end": 2919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2923,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2929,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 3014,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2935,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 3014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 3014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 3014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 3014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3177,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3020,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3145,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3163,
											"end": 3168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3145,
											"end": 3169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3169,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3145,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3125,
											"end": 3170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3170,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3125,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3120,
											"end": 3123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3171,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3721,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3183,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 3437,
											"end": 3440,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3366,
											"end": 3441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3441,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 3366,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 3550,
											"end": 3553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3547,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3479,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 3479,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3581,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3574,
											"end": 3577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3663,
											"end": 3666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3592,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3667,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3592,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3676,
											"end": 3695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3721,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3721,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Documents/Web3/Casino/002 Roulette.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"A_oneToOne(uint256)": "1640e34e",
							"B_twoToOne(uint256)": "4eca8772",
							"C_fiveToOne(uint256)": "14fbb92b",
							"D_eightToOne(uint256)": "8fb17973",
							"E_elevenToOne(uint256)": "ff65d090",
							"F_seventeenToOne(uint256)": "07d0394c",
							"G_thirtyfiveToOne(uint256)": "bed2e0c3",
							"H_deposit()": "e8d18212",
							"I_withdraw(uint256)": "f855aa9e",
							"J_getBalance()": "374ccd33",
							"owner()": "8da5cb5b",
							"player()": "48db5f89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bet\",\"type\":\"uint256\"}],\"name\":\"A_oneToOne\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bet\",\"type\":\"uint256\"}],\"name\":\"B_twoToOne\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bet\",\"type\":\"uint256\"}],\"name\":\"C_fiveToOne\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bet\",\"type\":\"uint256\"}],\"name\":\"D_eightToOne\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bet\",\"type\":\"uint256\"}],\"name\":\"E_elevenToOne\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bet\",\"type\":\"uint256\"}],\"name\":\"F_seventeenToOne\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bet\",\"type\":\"uint256\"}],\"name\":\"G_thirtyfiveToOne\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"H_deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"I_withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"J_getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"player\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/Web3/Casino/002 Roulette.sol\":\"Roulette\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Documents/Web3/Casino/002 Roulette.sol\":{\"keccak256\":\"0xc9df88a565c3be78f7c9246310436a23e16033aeac555821302fa6891e1770e1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0137a14e51f5cf353b4703eee710176dfbc2b962a34fedda8ce958519cbd1a3e\",\"dweb:/ipfs/QmPKVuDgz4dCjs7bFNnCC8L2QhFmyP5BHEAP9AhWJHp2SZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Documents/Web3/Casino/002 Roulette.sol:Roulette",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 5,
								"contract": "Documents/Web3/Casino/002 Roulette.sol:Roulette",
								"label": "player",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Documents/Web3/Casino/002 Roulette.sol": {
				"ast": {
					"absolutePath": "Documents/Web3/Casino/002 Roulette.sol",
					"exportedSymbols": {
						"Roulette": [
							362
						]
					},
					"id": 363,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Roulette",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "Roulette",
							"nameLocation": "556:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "595:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "572:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "572:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48db5f89",
									"id": 5,
									"mutability": "mutable",
									"name": "player",
									"nameLocation": "629:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "606:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "606:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "688:44:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "698:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 11,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "714:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "714:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "706:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 9,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "706:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "706:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "698:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "698:27:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "685:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "688:0:0"
									},
									"scope": 362,
									"src": "674:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "796:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 20,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "814:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "814:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 22,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "828:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "814:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 19,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "806:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "806:28:0"
											},
											{
												"id": 26,
												"nodeType": "PlaceholderStatement",
												"src": "844:1:0"
											}
										]
									},
									"id": 28,
									"name": "onlyOwner",
									"nameLocation": "784:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "793:2:0"
									},
									"src": "775:77:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "1080:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 40,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "1137:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_Roulette_$362",
																							"typeString": "contract Roulette"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_Roulette_$362",
																							"typeString": "contract Roulette"
																						}
																					],
																					"id": 39,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1129:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 38,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1129:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 41,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1129:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 42,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"src": "1129:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 43,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "1152:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 44,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "1152:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 45,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "1169:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 46,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "difficulty",
																			"nodeType": "MemberAccess",
																			"src": "1169:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 36,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1112:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1112:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1112:74:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 35,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1102:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1102:85:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1097:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 33,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1097:4:0",
															"typeDescriptions": {}
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1097:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 32,
												"id": 50,
												"nodeType": "Return",
												"src": "1090:98:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRandomNumber",
									"nameLocation": "1034:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1049:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1074:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1074:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:6:0"
									},
									"scope": 362,
									"src": "1025:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "1452:218:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 58,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1470:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1470:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 60,
																	"name": "bet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1483:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1489:7:0",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "1483:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1470:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1462:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "1462:35:0"
											},
											{
												"assignments": [
													67
												],
												"declarations": [
													{
														"constant": false,
														"id": 67,
														"mutability": "mutable",
														"name": "determinant",
														"nameLocation": "1512:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 90,
														"src": "1507:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 66,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 72,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 68,
															"name": "getRandomNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "1526:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1526:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3338",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1546:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_38_by_1",
															"typeString": "int_const 38"
														},
														"value": "38"
													},
													"src": "1526:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1507:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 73,
														"name": "determinant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "1562:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3138",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1576:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "1562:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 88,
													"nodeType": "Block",
													"src": "1662:2:0",
													"statements": []
												},
												"id": 89,
												"nodeType": "IfStatement",
												"src": "1558:106:0",
												"trueBody": {
													"id": 87,
													"nodeType": "Block",
													"src": "1580:68:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 84,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 82,
																			"name": "bet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "1623:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 83,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1629:7:0",
																			"subdenomination": "ether",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2000000000000000000_by_1",
																				"typeString": "int_const 2000000000000000000"
																			},
																			"value": "2"
																		},
																		"src": "1623:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 78,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1602:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 79,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1602:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 77,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1594:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 76,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1594:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1594:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1594:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1594:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 86,
															"nodeType": "ExpressionStatement",
															"src": "1594:43:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1640e34e",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "A_oneToOne",
									"nameLocation": "1416:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "bet",
												"nameLocation": "1432:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "1427:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1427:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1426:10:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1452:0:0"
									},
									"scope": 362,
									"src": "1407:263:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1721:218:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 97,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1739:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1739:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 99,
																	"name": "bet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1752:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1758:7:0",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "1752:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1739:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1731:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1731:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1731:35:0"
											},
											{
												"assignments": [
													106
												],
												"declarations": [
													{
														"constant": false,
														"id": 106,
														"mutability": "mutable",
														"name": "determinant",
														"nameLocation": "1781:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 129,
														"src": "1776:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 105,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1776:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 111,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 107,
															"name": "getRandomNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "1795:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1795:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3338",
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1815:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_38_by_1",
															"typeString": "int_const 38"
														},
														"value": "38"
													},
													"src": "1795:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1776:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 112,
														"name": "determinant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1831:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3132",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1845:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "1831:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1931:2:0",
													"statements": []
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1827:106:0",
												"trueBody": {
													"id": 126,
													"nodeType": "Block",
													"src": "1849:68:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 121,
																			"name": "bet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 93,
																			"src": "1892:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1898:7:0",
																			"subdenomination": "ether",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3000000000000000000_by_1",
																				"typeString": "int_const 3000000000000000000"
																			},
																			"value": "3"
																		},
																		"src": "1892:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 117,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1871:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1871:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1863:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 115,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1863:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1863:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1863:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1863:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 125,
															"nodeType": "ExpressionStatement",
															"src": "1863:43:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4eca8772",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "B_twoToOne",
									"nameLocation": "1685:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "bet",
												"nameLocation": "1701:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1696:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1696:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:10:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:0:0"
									},
									"scope": 362,
									"src": "1676:263:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "1991:217:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 136,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2009:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2009:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 138,
																	"name": "bet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "2022:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2028:7:0",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "2022:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2009:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2001:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2001:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2001:35:0"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "determinant",
														"nameLocation": "2051:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 168,
														"src": "2046:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 144,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2046:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 146,
															"name": "getRandomNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "2065:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2065:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3338",
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2085:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_38_by_1",
															"typeString": "int_const 38"
														},
														"value": "38"
													},
													"src": "2065:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2046:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 151,
														"name": "determinant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2101:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "36",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2115:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "2101:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 166,
													"nodeType": "Block",
													"src": "2200:2:0",
													"statements": []
												},
												"id": 167,
												"nodeType": "IfStatement",
												"src": "2097:105:0",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2118:68:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 160,
																			"name": "bet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 132,
																			"src": "2161:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "36",
																			"id": 161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2167:7:0",
																			"subdenomination": "ether",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6000000000000000000_by_1",
																				"typeString": "int_const 6000000000000000000"
																			},
																			"value": "6"
																		},
																		"src": "2161:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 156,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2140:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2140:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2132:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 154,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2132:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2132:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2132:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2132:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 164,
															"nodeType": "ExpressionStatement",
															"src": "2132:43:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "14fbb92b",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "C_fiveToOne",
									"nameLocation": "1954:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "bet",
												"nameLocation": "1971:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1966:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1966:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1965:10:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1991:0:0"
									},
									"scope": 362,
									"src": "1945:263:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "2261:217:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 175,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2279:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2279:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 177,
																	"name": "bet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "2292:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2298:7:0",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "2292:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2279:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2271:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "2271:35:0"
											},
											{
												"assignments": [
													184
												],
												"declarations": [
													{
														"constant": false,
														"id": 184,
														"mutability": "mutable",
														"name": "determinant",
														"nameLocation": "2321:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 207,
														"src": "2316:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 183,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2316:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 189,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 185,
															"name": "getRandomNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "2335:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2335:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3338",
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2355:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_38_by_1",
															"typeString": "int_const 38"
														},
														"value": "38"
													},
													"src": "2335:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2316:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 190,
														"name": "determinant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "2371:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "34",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "2371:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 205,
													"nodeType": "Block",
													"src": "2470:2:0",
													"statements": []
												},
												"id": 206,
												"nodeType": "IfStatement",
												"src": "2367:105:0",
												"trueBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "2388:68:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 199,
																			"name": "bet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "2431:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "39",
																			"id": 200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2437:7:0",
																			"subdenomination": "ether",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_9000000000000000000_by_1",
																				"typeString": "int_const 9000000000000000000"
																			},
																			"value": "9"
																		},
																		"src": "2431:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 195,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2410:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2410:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2402:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 193,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2402:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2402:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2402:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2402:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 203,
															"nodeType": "ExpressionStatement",
															"src": "2402:43:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8fb17973",
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "D_eightToOne",
									"nameLocation": "2223:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "bet",
												"nameLocation": "2241:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "2236:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2236:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2235:10:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2261:0:0"
									},
									"scope": 362,
									"src": "2214:264:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "2532:218:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 214,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2550:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2550:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 216,
																	"name": "bet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "2563:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2569:7:0",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "2563:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2550:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2542:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "2542:35:0"
											},
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "determinant",
														"nameLocation": "2592:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 246,
														"src": "2587:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 222,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2587:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 224,
															"name": "getRandomNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "2606:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2606:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3338",
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2626:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_38_by_1",
															"typeString": "int_const 38"
														},
														"value": "38"
													},
													"src": "2606:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2587:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 229,
														"name": "determinant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "2642:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "33",
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2656:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "2642:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 244,
													"nodeType": "Block",
													"src": "2742:2:0",
													"statements": []
												},
												"id": 245,
												"nodeType": "IfStatement",
												"src": "2638:106:0",
												"trueBody": {
													"id": 243,
													"nodeType": "Block",
													"src": "2659:69:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 238,
																			"name": "bet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 210,
																			"src": "2702:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3132",
																			"id": 239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2708:8:0",
																			"subdenomination": "ether",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12000000000000000000_by_1",
																				"typeString": "int_const 12000000000000000000"
																			},
																			"value": "12"
																		},
																		"src": "2702:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 234,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2681:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2681:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2673:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 232,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2673:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2673:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2673:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2673:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 242,
															"nodeType": "ExpressionStatement",
															"src": "2673:44:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ff65d090",
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "E_elevenToOne",
									"nameLocation": "2493:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "bet",
												"nameLocation": "2512:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2507:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2507:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:10:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2532:0:0"
									},
									"scope": 362,
									"src": "2484:266:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "2807:218:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 253,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2825:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2825:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 255,
																	"name": "bet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "2838:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2844:7:0",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "2838:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2825:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2817:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2817:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "2817:35:0"
											},
											{
												"assignments": [
													262
												],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"mutability": "mutable",
														"name": "determinant",
														"nameLocation": "2867:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "2862:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 261,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2862:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 267,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 263,
															"name": "getRandomNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "2881:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2881:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3338",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2901:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_38_by_1",
															"typeString": "int_const 38"
														},
														"value": "38"
													},
													"src": "2881:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2862:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 268,
														"name": "determinant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "2917:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "32",
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2931:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "2917:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 283,
													"nodeType": "Block",
													"src": "3017:2:0",
													"statements": []
												},
												"id": 284,
												"nodeType": "IfStatement",
												"src": "2913:106:0",
												"trueBody": {
													"id": 282,
													"nodeType": "Block",
													"src": "2934:69:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 277,
																			"name": "bet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "2977:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2983:8:0",
																			"subdenomination": "ether",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18000000000000000000_by_1",
																				"typeString": "int_const 18000000000000000000"
																			},
																			"value": "18"
																		},
																		"src": "2977:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 273,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2956:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2956:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2948:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 271,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2948:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2948:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2948:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2948:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 281,
															"nodeType": "ExpressionStatement",
															"src": "2948:44:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "07d0394c",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "F_seventeenToOne",
									"nameLocation": "2765:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "bet",
												"nameLocation": "2787:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2782:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2782:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:10:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2807:0:0"
									},
									"scope": 362,
									"src": "2756:269:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3083:218:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 292,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3101:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3101:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 294,
																	"name": "bet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "3114:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3120:7:0",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "3114:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3101:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3093:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3093:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "3093:35:0"
											},
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "determinant",
														"nameLocation": "3143:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 324,
														"src": "3138:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3138:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 306,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 302,
															"name": "getRandomNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "3157:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3157:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "3338",
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3177:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_38_by_1",
															"typeString": "int_const 38"
														},
														"value": "38"
													},
													"src": "3157:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3138:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 307,
														"name": "determinant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "3193:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "31",
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3207:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3193:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 322,
													"nodeType": "Block",
													"src": "3293:2:0",
													"statements": []
												},
												"id": 323,
												"nodeType": "IfStatement",
												"src": "3189:106:0",
												"trueBody": {
													"id": 321,
													"nodeType": "Block",
													"src": "3210:69:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 316,
																			"name": "bet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "3253:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3336",
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3259:8:0",
																			"subdenomination": "ether",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_36000000000000000000_by_1",
																				"typeString": "int_const 36000000000000000000"
																			},
																			"value": "36"
																		},
																		"src": "3253:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 312,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "3232:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "3232:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3224:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 310,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3224:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3224:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "3224:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3224:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 320,
															"nodeType": "ExpressionStatement",
															"src": "3224:44:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "bed2e0c3",
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "G_thirtyfiveToOne",
									"nameLocation": "3040:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "bet",
												"nameLocation": "3063:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3058:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3058:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:10:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3083:0:0"
									},
									"scope": 362,
									"src": "3031:270:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "3399:2:0",
										"statements": []
									},
									"functionSelector": "e8d18212",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 328,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 327,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "3387:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3387:11:0"
										}
									],
									"name": "H_deposit",
									"nameLocation": "3360:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3369:2:0"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3399:0:0"
									},
									"scope": 362,
									"src": "3351:50:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "3459:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 341,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "3484:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31",
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3493:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "3484:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 338,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "3469:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3469:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3469:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "3469:32:0"
											}
										]
									},
									"functionSelector": "f855aa9e",
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 336,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 335,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "3447:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3447:11:0"
										}
									],
									"name": "I_withdraw",
									"nameLocation": "3416:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3432:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3427:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3427:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:13:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3459:0:0"
									},
									"scope": 362,
									"src": "3407:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "3627:45:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 356,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3652:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Roulette_$362",
																	"typeString": "contract Roulette"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Roulette_$362",
																	"typeString": "contract Roulette"
																}
															],
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3644:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 354,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3644:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3644:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3644:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 353,
												"id": 359,
												"nodeType": "Return",
												"src": "3637:28:0"
											}
										]
									},
									"functionSelector": "374ccd33",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 350,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 349,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "3600:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3600:11:0"
										}
									],
									"name": "J_getBalance",
									"nameLocation": "3573:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3585:2:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "3621:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3621:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3620:6:0"
									},
									"scope": 362,
									"src": "3564:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 363,
							"src": "547:3132:0",
							"usedErrors": []
						}
					],
					"src": "39:3640:0"
				},
				"id": 0
			}
		}
	}
}