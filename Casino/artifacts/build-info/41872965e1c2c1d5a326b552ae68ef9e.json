{
	"id": "41872965e1c2c1d5a326b552ae68ef9e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"Documents/Web3/Casino/002 Roulette.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.15;\n\n/*  This contract contains a function for each odds bracket of roulette bets.\n    This results in the bets of similar odds to call the same function, meaning\n    that the front end will need to create an illusion of choice for each bet\n    while in reality, they will just be choosing an odds bracket. Although the\n    game will be mathematically equivalent to a game with true choice, players\n    may feel misled unless provided a proficient disclaimer on the games interface.\n*/\n\ncontract Roulette {\n\n    address public owner;\n\n    // constructor to set owner\n    constructor() {\n        owner = msg.sender;\n    }\n\n    // modifier to restrict to owner\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    // modifier to set bet and require msg.value to be equal to the bet\n    modifier setBet() {\n        uint bet = msg.value;\n        _;\n    }\n\n    // pseudorandom number generator (will use chainlink when deployed to testnet)\n    function getRandomNumber() public view returns (uint) {\n        return uint(keccak256(abi.encodePacked(address(this).balance, block.timestamp)));\n    }\n\n    // odds functions\n\n    // owner deposit and withdraw functions\n    function deposit() payable public onlyOwner() {\n        \n    }\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Documents/Web3/Casino/002 Roulette.sol": {
				"Roulette": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRandomNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/Web3/Casino/002 Roulette.sol\":547:1326  contract Roulette {... */\n  mstore(0x40, 0x80)\n    /* \"Documents/Web3/Casino/002 Roulette.sol\":631:680  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Documents/Web3/Casino/002 Roulette.sol\":663:673  msg.sender */\n  caller\n    /* \"Documents/Web3/Casino/002 Roulette.sol\":655:660  owner */\n  0x00\n  dup1\n    /* \"Documents/Web3/Casino/002 Roulette.sol\":655:673  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Documents/Web3/Casino/002 Roulette.sol\":547:1326  contract Roulette {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":547:1326  contract Roulette {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xdbdff2c1\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":572:592  address public owner */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1257:1319  function deposit() payable public onlyOwner() {... */\n    tag_3:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1033:1184  function getRandomNumber() public view returns (uint) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":572:592  address public owner */\n    tag_7:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1257:1319  function deposit() payable public onlyOwner() {... */\n    tag_11:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":776:781  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":762:781  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":762:772  msg.sender */\n      caller\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":762:781  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":754:782  require(msg.sender == owner) */\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1257:1319  function deposit() payable public onlyOwner() {... */\n      jump\t// out\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1033:1184  function getRandomNumber() public view returns (uint) {... */\n    tag_14:\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1081:1085  uint */\n      0x00\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1136:1157  address(this).balance */\n      selfbalance\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1159:1174  block.timestamp */\n      timestamp\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1119:1175  abi.encodePacked(address(this).balance, block.timestamp) */\n      add(0x20, mload(0x40))\n      tag_21\n      swap3\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1109:1176  keccak256(abi.encodePacked(address(this).balance, block.timestamp)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1104:1177  uint(keccak256(abi.encodePacked(address(this).balance, block.timestamp))) */\n      0x00\n      shr\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1097:1177  return uint(keccak256(abi.encodePacked(address(this).balance, block.timestamp))) */\n      swap1\n      pop\n        /* \"Documents/Web3/Casino/002 Roulette.sol\":1033:1184  function getRandomNumber() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_23:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_24:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_33\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_23\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_25:\n        /* \"#utility.yul\":328:352   */\n      tag_35\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_24\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_9:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_37\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_25\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_26:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_27:\n        /* \"#utility.yul\":763:787   */\n      tag_40\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_26\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_16:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_42\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_27\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1028:1107   */\n    tag_28:\n        /* \"#utility.yul\":1067:1074   */\n      0x00\n        /* \"#utility.yul\":1096:1101   */\n      dup2\n        /* \"#utility.yul\":1085:1101   */\n      swap1\n      pop\n        /* \"#utility.yul\":1028:1107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1113:1270   */\n    tag_29:\n        /* \"#utility.yul\":1218:1263   */\n      tag_45\n        /* \"#utility.yul\":1238:1262   */\n      tag_46\n        /* \"#utility.yul\":1256:1261   */\n      dup3\n        /* \"#utility.yul\":1238:1262   */\n      tag_26\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1218:1263   */\n      tag_28\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1213:1216   */\n      dup3\n        /* \"#utility.yul\":1206:1264   */\n      mstore\n        /* \"#utility.yul\":1113:1270   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1673   */\n    tag_22:\n        /* \"#utility.yul\":1416:1419   */\n      0x00\n        /* \"#utility.yul\":1431:1506   */\n      tag_48\n        /* \"#utility.yul\":1502:1505   */\n      dup3\n        /* \"#utility.yul\":1493:1499   */\n      dup6\n        /* \"#utility.yul\":1431:1506   */\n      tag_29\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1531:1533   */\n      0x20\n        /* \"#utility.yul\":1526:1529   */\n      dup3\n        /* \"#utility.yul\":1522:1534   */\n      add\n        /* \"#utility.yul\":1515:1534   */\n      swap2\n      pop\n        /* \"#utility.yul\":1544:1619   */\n      tag_49\n        /* \"#utility.yul\":1615:1618   */\n      dup3\n        /* \"#utility.yul\":1606:1612   */\n      dup5\n        /* \"#utility.yul\":1544:1619   */\n      tag_29\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1644:1646   */\n      0x20\n        /* \"#utility.yul\":1639:1642   */\n      dup3\n        /* \"#utility.yul\":1635:1647   */\n      add\n        /* \"#utility.yul\":1628:1647   */\n      swap2\n      pop\n        /* \"#utility.yul\":1664:1667   */\n      dup2\n        /* \"#utility.yul\":1657:1667   */\n      swap1\n      pop\n        /* \"#utility.yul\":1276:1673   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202dd9b3b33a02c70bbe0464e3a9764455fcb6c59e55ec39998a531170c669c1f864736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061025d806100606000396000f3fe6080604052600436106100345760003560e01c80638da5cb5b14610039578063d0e30db014610064578063dbdff2c11461006e575b600080fd5b34801561004557600080fd5b5061004e610099565b60405161005b919061018b565b60405180910390f35b61006c6100bd565b005b34801561007a57600080fd5b50610083610117565b60405161009091906101bf565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011557600080fd5b565b6000474260405160200161012c9291906101fb565b6040516020818303038152906040528051906020012060001c905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101758261014a565b9050919050565b6101858161016a565b82525050565b60006020820190506101a0600083018461017c565b92915050565b6000819050919050565b6101b9816101a6565b82525050565b60006020820190506101d460008301846101b0565b92915050565b6000819050919050565b6101f56101f0826101a6565b6101da565b82525050565b600061020782856101e4565b60208201915061021782846101e4565b602082019150819050939250505056fea26469706673582212202dd9b3b33a02c70bbe0464e3a9764455fcb6c59e55ec39998a531170c669c1f864736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x25D DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xDBDFF2C1 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xBD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83 PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 SELFBALANCE TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12C SWAP3 SWAP2 SWAP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175 DUP3 PUSH2 0x14A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x185 DUP2 PUSH2 0x16A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9 DUP2 PUSH2 0x1A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 DUP3 PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207 DUP3 DUP6 PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x217 DUP3 DUP5 PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xD9 0xB3 0xB3 GASPRICE MUL 0xC7 SIGNEXTEND 0xBE DIV PUSH5 0xE3A9764455 0xFC 0xB6 0xC5 SWAP15 SSTORE 0xEC CODECOPY SWAP10 DUP11 MSTORE8 GT PUSH17 0xC669C1F864736F6C634300080F00330000 ",
							"sourceMap": "547:779:0:-:0;;;631:49;;;;;;;;;;663:10;655:5;;:18;;;;;;;;;;;;;;;;;;547:779;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposit_60": {
									"entryPoint": 189,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRandomNumber_54": {
									"entryPoint": 279,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_3": {
									"entryPoint": 153,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1676:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "659:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:1",
														"type": ""
													}
												],
												"src": "593:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:1",
														"type": ""
													}
												],
												"src": "676:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:1",
														"type": ""
													}
												],
												"src": "800:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1075:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1085:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1096:5:1"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "1085:7:1"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1057:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "1067:7:1",
														"type": ""
													}
												],
												"src": "1028:79:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1213:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1256:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1238:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1238:24:1"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1218:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1218:45:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:58:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1184:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1191:3:1",
														"type": ""
													}
												],
												"src": "1113:157:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1420:253:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1493:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1502:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1431:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1431:75:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1515:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1526:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1531:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1522:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1522:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1515:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1606:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1615:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1544:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1544:75:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1628:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1639:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1644:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1628:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1657:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1664:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1657:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1391:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1397:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1405:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1416:3:1",
														"type": ""
													}
												],
												"src": "1276:397:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c80638da5cb5b14610039578063d0e30db014610064578063dbdff2c11461006e575b600080fd5b34801561004557600080fd5b5061004e610099565b60405161005b919061018b565b60405180910390f35b61006c6100bd565b005b34801561007a57600080fd5b50610083610117565b60405161009091906101bf565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011557600080fd5b565b6000474260405160200161012c9291906101fb565b6040516020818303038152906040528051906020012060001c905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101758261014a565b9050919050565b6101858161016a565b82525050565b60006020820190506101a0600083018461017c565b92915050565b6000819050919050565b6101b9816101a6565b82525050565b60006020820190506101d460008301846101b0565b92915050565b6000819050919050565b6101f56101f0826101a6565b6101da565b82525050565b600061020782856101e4565b60208201915061021782846101e4565b602082019150819050939250505056fea26469706673582212202dd9b3b33a02c70bbe0464e3a9764455fcb6c59e55ec39998a531170c669c1f864736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xDBDFF2C1 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xBD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83 PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 SELFBALANCE TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12C SWAP3 SWAP2 SWAP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175 DUP3 PUSH2 0x14A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x185 DUP2 PUSH2 0x16A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9 DUP2 PUSH2 0x1A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 DUP3 PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207 DUP3 DUP6 PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x217 DUP3 DUP5 PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xD9 0xB3 0xB3 GASPRICE MUL 0xC7 SIGNEXTEND 0xBE DIV PUSH5 0xE3A9764455 0xFC 0xB6 0xC5 SWAP15 SSTORE 0xEC CODECOPY SWAP10 DUP11 MSTORE8 GT PUSH17 0xC669C1F864736F6C634300080F00330000 ",
							"sourceMap": "547:779:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1257:62;;;:::i;:::-;;1033:151;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;572:20;;;;;;;;;;;;:::o;1257:62::-;776:5;;;;;;;;;;762:19;;:10;:19;;;754:28;;;;;;1257:62::o;1033:151::-;1081:4;1136:21;1159:15;1119:56;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1109:67;;;;;;1104:73;;1097:80;;1033:151;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1028:79::-;1067:7;1096:5;1085:16;;1028:79;;;:::o;1113:157::-;1218:45;1238:24;1256:5;1238:24;:::i;:::-;1218:45;:::i;:::-;1213:3;1206:58;1113:157;;:::o;1276:397::-;1416:3;1431:75;1502:3;1493:6;1431:75;:::i;:::-;1531:2;1526:3;1522:12;1515:19;;1544:75;1615:3;1606:6;1544:75;:::i;:::-;1644:2;1639:3;1635:12;1628:19;;1664:3;1657:10;;1276:397;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "121000",
								"executionCost": "24431",
								"totalCost": "145431"
							},
							"external": {
								"deposit()": "2287",
								"getRandomNumber()": "infinite",
								"owner()": "2489"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 547,
									"end": 1326,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 547,
									"end": 1326,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 547,
									"end": 1326,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 631,
									"end": 680,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 631,
									"end": 680,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 631,
									"end": 680,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 631,
									"end": 680,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 631,
									"end": 680,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 631,
									"end": 680,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 680,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 631,
									"end": 680,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 631,
									"end": 680,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 631,
									"end": 680,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 631,
									"end": 680,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 663,
									"end": 673,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 655,
									"end": 660,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 655,
									"end": 660,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 655,
									"end": 673,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 655,
									"end": 673,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 655,
									"end": 673,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 655,
									"end": 673,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 547,
									"end": 1326,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 547,
									"end": 1326,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 547,
									"end": 1326,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 547,
									"end": 1326,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 547,
									"end": 1326,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 547,
									"end": 1326,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 547,
									"end": 1326,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202dd9b3b33a02c70bbe0464e3a9764455fcb6c59e55ec39998a531170c669c1f864736f6c634300080f0033",
									".code": [
										{
											"begin": 547,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "DBDFF2C1"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 1326,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 572,
											"end": 592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 572,
											"end": 592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1319,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1257,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1257,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1257,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1319,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1257,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1319,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1033,
											"end": 1184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1033,
											"end": 1184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 572,
											"end": 592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1319,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1257,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 776,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 776,
											"end": 781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 776,
											"end": 781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 776,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 776,
											"end": 781,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 776,
											"end": 781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 776,
											"end": 781,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 776,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 776,
											"end": 781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 762,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 762,
											"end": 781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 762,
											"end": 772,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 762,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 762,
											"end": 781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 762,
											"end": 781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 754,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 754,
											"end": 782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 754,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 782,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 754,
											"end": 782,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 754,
											"end": 782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1257,
											"end": 1319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1157,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1174,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1119,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1119,
											"end": 1175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1177,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1028,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1107,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1270,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1113,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1238,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1256,
											"end": 1261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1238,
											"end": 1262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1262,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1238,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1218,
											"end": 1263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1263,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1218,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1673,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1276,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1502,
											"end": 1505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1499,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1431,
											"end": 1506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1506,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1431,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1615,
											"end": 1618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1612,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1544,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1619,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1544,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1646,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1673,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1673,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Documents/Web3/Casino/002 Roulette.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"getRandomNumber()": "dbdff2c1",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/Web3/Casino/002 Roulette.sol\":\"Roulette\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Documents/Web3/Casino/002 Roulette.sol\":{\"keccak256\":\"0xe50350acecda688f45153ac59a34865ed76f4fe683c0b947e24f66f7a22c09d4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c900a883bca45f1b8b8ba889f2b8de4a2be36bdf22e351458b76650a26a24eab\",\"dweb:/ipfs/QmfWpYkUfMuq8nSK2rEB9mnbc6rBZyL6ynH1XqBs2ocmiY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Documents/Web3/Casino/002 Roulette.sol:Roulette",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Documents/Web3/Casino/002 Roulette.sol": {
				"ast": {
					"absolutePath": "Documents/Web3/Casino/002 Roulette.sol",
					"exportedSymbols": {
						"Roulette": [
							61
						]
					},
					"id": 62,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Roulette",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 61,
							"linearizedBaseContracts": [
								61
							],
							"name": "Roulette",
							"nameLocation": "556:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "587:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 61,
									"src": "572:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "572:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "645:35:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "655:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "663:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "663:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "655:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "655:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "642:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:0:0"
									},
									"scope": 61,
									"src": "631:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "744:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "762:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "762:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 17,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "776:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "762:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "754:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "754:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "754:28:0"
											},
											{
												"id": 21,
												"nodeType": "PlaceholderStatement",
												"src": "792:1:0"
											}
										]
									},
									"id": 23,
									"name": "onlyOwner",
									"nameLocation": "732:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "741:2:0"
									},
									"src": "723:77:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "896:48:0",
										"statements": [
											{
												"assignments": [
													26
												],
												"declarations": [
													{
														"constant": false,
														"id": 26,
														"mutability": "mutable",
														"name": "bet",
														"nameLocation": "911:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 31,
														"src": "906:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 25,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "906:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 29,
												"initialValue": {
													"expression": {
														"id": 27,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "917:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "917:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "906:20:0"
											},
											{
												"id": 30,
												"nodeType": "PlaceholderStatement",
												"src": "936:1:0"
											}
										]
									},
									"id": 32,
									"name": "setBet",
									"nameLocation": "887:6:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:2:0"
									},
									"src": "878:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1087:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 44,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "1144:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_Roulette_$61",
																							"typeString": "contract Roulette"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_Roulette_$61",
																							"typeString": "contract Roulette"
																						}
																					],
																					"id": 43,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1136:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 42,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1136:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 45,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1136:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 46,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"src": "1136:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 47,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "1159:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 48,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "1159:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 40,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1119:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 41,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1119:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1119:56:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 39,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1109:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1109:67:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1104:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 37,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1104:4:0",
															"typeDescriptions": {}
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1104:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 36,
												"id": 52,
												"nodeType": "Return",
												"src": "1097:80:0"
											}
										]
									},
									"functionSelector": "dbdff2c1",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRandomNumber",
									"nameLocation": "1042:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1057:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1081:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1081:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1080:6:0"
									},
									"scope": 61,
									"src": "1033:151:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1303:16:0",
										"statements": []
									},
									"functionSelector": "d0e30db0",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 57,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 56,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "1291:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1291:11:0"
										}
									],
									"name": "deposit",
									"nameLocation": "1266:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1273:2:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1303:0:0"
									},
									"scope": 61,
									"src": "1257:62:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 62,
							"src": "547:779:0",
							"usedErrors": []
						}
					],
					"src": "39:1287:0"
				},
				"id": 0
			}
		}
	}
}